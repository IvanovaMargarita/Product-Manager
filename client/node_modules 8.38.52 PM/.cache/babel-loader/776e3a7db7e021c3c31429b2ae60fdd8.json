{"ast":null,"code":"var _jsxFileName = \"/Users/margaritaivanova/Desktop/codingdojo/mern/react/myNewProject/client/src/components/PersonList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PersonList = props => {\n  _s();\n\n  /* We deconstruct getter and setter which were passed down \n  via props by the parent component (app.js) to our child \n  component (PersonList.js). Now we can easily use the getter \n  and setter without having to write props.getter or props.setter every time: */\n  const {\n    people,\n    setPeople\n  } = props;\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/people\") //get all ppl method from the backed\n    .then(res => {\n      console.log(res.data);\n      setPeople(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //adding empty array so the page doesnt keep making api requests\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: people.map((person, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [person.lastName, \", \", person.fisrName]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PersonList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PersonList;\nexport default PersonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonList\");","map":{"version":3,"names":["React","useState","useEffect","axios","PersonList","props","people","setPeople","get","then","res","console","log","data","catch","err","map","person","index","lastName","fisrName"],"sources":["/Users/margaritaivanova/Desktop/codingdojo/mern/react/myNewProject/client/src/components/PersonList.js"],"sourcesContent":["import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst PersonList = (props) => {\n    /* We deconstruct getter and setter which were passed down \n    via props by the parent component (app.js) to our child \n    component (PersonList.js). Now we can easily use the getter \n    and setter without having to write props.getter or props.setter every time: */\n    const {people, setPeople}=props;\n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8000/api/people\") //get all ppl method from the backed\n        .then((res)=>{\n            console.log(res.data)\n            setPeople(res.data)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    },[]) //adding empty array so the page doesnt keep making api requests\n  return (\n    <div>\n        {\n            people.map((person, index)=>{\n                return <p key={index}>{person.lastName}, {person.fisrName}</p>\n            })\n        }\n    </div>\n  )\n}\n\nexport default PersonList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAC1B;AACJ;AACA;AACA;EACI,MAAM;IAACC,MAAD;IAASC;EAAT,IAAoBF,KAA1B;EAEAH,SAAS,CAAC,MAAI;IACVC,KAAK,CAACK,GAAN,CAAU,kCAAV,EAA8C;IAA9C,CACCC,IADD,CACOC,GAAD,IAAO;MACTC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;MACAN,SAAS,CAACG,GAAG,CAACG,IAAL,CAAT;IACH,CAJD,EAKCC,KALD,CAKQC,GAAD,IAAO;MACVJ,OAAO,CAACC,GAAR,CAAYG,GAAZ;IACH,CAPD;EAQH,CATQ,EASP,EATO,CAAT,CAP0B,CAgBpB;;EACR,oBACE;IAAA,UAEQT,MAAM,CAACU,GAAP,CAAW,CAACC,MAAD,EAASC,KAAT,KAAiB;MACxB,oBAAO;QAAA,WAAgBD,MAAM,CAACE,QAAvB,QAAmCF,MAAM,CAACG,QAA1C;MAAA,GAAQF,KAAR;QAAA;QAAA;QAAA;MAAA,QAAP;IACH,CAFD;EAFR;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA1BD;;GAAMd,U;;KAAAA,U;AA4BN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}